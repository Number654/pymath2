    Проект "Pymath" - это небольшой инструмент, расширяющий встроенные математические инструменты Python.

Обновление 2.0 вышло!

    В этом обновлении:
        1. Исправление багов и ошибок
        2. Улучшен и расширен функционал инструмента
        3. В проект встроены небольшие встроенные приложения,
          такие как стрелочные часы или текстовый редактор
        4. Добавлен новый пакет для геометрических вычислений
    Подробности о новостях обновления 2.0 указаны в файле "whatsnew".


Инструкция по использованию

    Оглавление:
        1. Проверка числа на нечетность - *


    Глава I. Основной функционал
        В проекте "Pymath" главным пакетом является пакет с названием "core".
        Он содержит несколько файлов, о котором в этой главе пойдет речь.

        Начнем с главного файла - "pymath.py", в котором содержится основной
        функционал инструмента. Он содержит следующие функции:
            1. Чтобы узнать, является ли число нечетным, используйте функцию "is_odd()".
              Она принимает один аргумент: num - число, которое вы хотите проверить.
            2. Чтобы узнать, является ли число простым, используйте функцию "is_simple()".
              Она принимает один аргумент: num - число, которое вы хотите проверить.
            3. Чтобы узнать, положительное ли число, используйте функцию "is_positive()".
              Она принимает один аргумент: num - число, которое вы хотите проверить.
            4. Чтобы узнать, злое ли число (https://ru.wikipedia.org/wiki/%D0%97%D0%BB%D0%BE%D0%B5_%D1%87%D0%B8%D1%81%D0%BB%D0%BE),
              используйте функцию "is_evil()". Она принимает один аргумент: num - число,
              которое вы хотите проверить.
            5. Чтобы перемножить числа из итерируемого объекта, используйте функцию "multiply_all()".
              Она принимает один аргумент _all - итерируемый объект, содержащий числа, которые вы хотите
              перемножить.
            6. Чтобы найти кратные какого-либо числа, используйте функцию "multiplies()".
              Она принимает один обязательный аргумент: num - число, кратные которого Вы хотите найти,
              и один необязательный: length - нужное Вам количество кратных, по умолчанию равное 10.
            7. Чтобы найти делители числа, используйте функцию "dividers()".
              Она принимает один аргумент: num - число, делители которого Вы хотите найти.
            8. Чтобы найти наименьшее общее кратное (НОК) нескольких чисел, используйте
              функцию "lcm()". Она принимает любое количество аргументов, которыми будут являться
              числа, НОК которых Вы хотите найти.
            9. Чтобы найти наибольший общий делитель (НОД) нескольких чисел, используйте
              функцию "gcd()". Она принимает любое количество аргументов, которыми будут являться
              числа, НОД которых Вы хотите найти.
            10. Чтобы разложить число на простые множители, используйте функцию "prime_factorization()".
              Она принимает один аргумент: num - число, которое вы хотите разложить на простые множители.
              Функция вернет два значения: первое - словарь, в котором содержится результат разложения
              построчно; второе - объект типа "collections.Counter", содержащий количество одинаковых
              простых множителей. Советую использовать функцию "visual_prime_factorization()"
              (см. пункт 11), так как она возвращает в качестве результата строку, содержащую
              более наглядный результат разложения.
            11. Чтобы получить наглядный результат разложения числа на простые множители, используйте
              функцию "visual_prime_factorization()". Она принимает в качестве аргумента результат
              функции "prime_factorization()" (см. пунк 10), преобразуя его в строку, удобную для понимания.
            12. Чтобы представить число в виде суммы разрядных слагаемых, используйте функцию
              "tens_factorization()". Она принимает один аргумент: num - число, которое Вы хотите
              обработать.
            13. Чтобы сгенереировать таблицу степеней в диапазоне натуральных чисел, используйте
              функцию "degree_table()". Она принимает
